CREATE TABLE ClientReservations (ClientReservationID int IDENTITY NOT NULL, ConferenceID int NOT NULL, ClientID int NOT NULL, ReservationDate date NOT NULL, PRIMARY KEY (ClientReservationID));
CREATE TABLE Clients (ClientID int IDENTITY NOT NULL, ConferenceID int NOT NULL, ClientName varchar(50) NOT NULL, ClientSurname varchar(50) NULL, IsPrivate bit NOT NULL, PhoneNumber int NOT NULL, Email varchar(50) NOT NULL, Address varchar(50) NOT NULL, City varchar(50) NOT NULL, PostalCode int NOT NULL, Country varchar(30) NOT NULL, PRIMARY KEY (ClientID));
CREATE TABLE Conferences (ConferenceID int IDENTITY NOT NULL, ConferenceName varchar(50) NOT NULL, StartDate date NOT NULL, EndDate date NOT NULL, Dicount float(10) NOT NULL, PRIMARY KEY (ConferenceID));
CREATE TABLE DaysReservations (DayReservationID int IDENTITY NOT NULL, ClientReservationID int NOT NULL, ConferenceDay int NOT NULL, NormalReservations int NOT NULL, StudentsReservations int NOT NULL, PRIMARY KEY (DayReservationID));
CREATE TABLE ParticipantReservations (ParticipantReservationID int IDENTITY NOT NULL, ParticipantID int NOT NULL, DayReservationID int NOT NULL, StudentCard int NULL, StudentCardDate date NULL, PRIMARY KEY (ParticipantReservationID));
CREATE TABLE Participants (ParticipantID int IDENTITY NOT NULL, ClientID int NOT NULL, Name varchar(50) NOT NULL, Surname varchar(50) NOT NULL, PhoneNumber int NOT NULL, Email varchar(50) NOT NULL, City varchar(50) NOT NULL, Country varchar(50) NOT NULL, DiscountGranted bit NOT NULL, PRIMARY KEY (ParticipantID));
CREATE TABLE ParticipantWorkshops (WorkshopReservationID int IDENTITY NOT NULL, ParticipantReservationID int NOT NULL, WorkshopID int NOT NULL, PRIMARY KEY (WorkshopReservationID));
CREATE TABLE Payments (PaymentID int NOT NULL, FineAssessed money NOT NULL, FinePaid money NOT NULL, DueDate date NOT NULL, PRIMARY KEY (PaymentID));
CREATE TABLE PriceList (PriceID int IDENTITY NOT NULL, ConferenceID int NOT NULL, PriceValue money NOT NULL, PriceDate date NOT NULL, PRIMARY KEY (PriceID));
CREATE TABLE Workshops (WorkshopID int IDENTITY NOT NULL, ConferenceID int NOT NULL, ConferenceDay int NOT NULL, WorkshopName varchar(50) NOT NULL, Places int NOT NULL, WorkshopFee money NOT NULL, WorkshopStart time NOT NULL, WorkshopEnd time NOT NULL, PRIMARY KEY (WorkshopID));
CREATE TABLE WorkshopsReservations (WorkshopReservationID int IDENTITY NOT NULL, DayReservationID int NOT NULL, WorkshopID int NOT NULL, NormalReservations int NOT NULL, PRIMARY KEY (WorkshopReservationID));
ALTER TABLE WorkshopsReservations ADD CONSTRAINT FKWorkshopsR389179 FOREIGN KEY (DayReservationID) REFERENCES DaysReservations (DayReservationID);
ALTER TABLE Payments ADD CONSTRAINT FKPayments159000 FOREIGN KEY (PaymentID) REFERENCES ClientReservations (ClientReservationID);
ALTER TABLE ParticipantReservations ADD CONSTRAINT FKParticipan776932 FOREIGN KEY (DayReservationID) REFERENCES DaysReservations (DayReservationID);
ALTER TABLE DaysReservations ADD CONSTRAINT FKDaysReserv393730 FOREIGN KEY (ClientReservationID) REFERENCES ClientReservations (ClientReservationID);
ALTER TABLE ParticipantWorkshops ADD CONSTRAINT FKParticipan410179 FOREIGN KEY (ParticipantReservationID) REFERENCES ParticipantReservations (ParticipantReservationID);
ALTER TABLE ClientReservations ADD CONSTRAINT FKClientRese505824 FOREIGN KEY (ClientID) REFERENCES Clients (ClientID);
ALTER TABLE ParticipantReservations ADD CONSTRAINT FKParticipan885909 FOREIGN KEY (ParticipantID) REFERENCES Participants (ParticipantID);
ALTER TABLE ClientReservations ADD CONSTRAINT FKClientRese907219 FOREIGN KEY (ConferenceID) REFERENCES Conferences (ConferenceID);
ALTER TABLE PriceList ADD CONSTRAINT FKPriceList919651 FOREIGN KEY (ConferenceID) REFERENCES Conferences (ConferenceID);
ALTER TABLE Workshops ADD CONSTRAINT FKWorkshops576388 FOREIGN KEY (ConferenceID) REFERENCES Conferences (ConferenceID);
ALTER TABLE ParticipantWorkshops ADD CONSTRAINT FKParticipan114217 FOREIGN KEY (WorkshopID) REFERENCES Workshops (WorkshopID);
ALTER TABLE WorkshopsReservations ADD CONSTRAINT FKWorkshopsR278761 FOREIGN KEY (WorkshopID) REFERENCES Workshops (WorkshopID);
